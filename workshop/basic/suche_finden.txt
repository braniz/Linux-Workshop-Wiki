====== 03 - Textdateien, Suchen, Finden ======

Das Suchen und Finden von Dateien, Inhalten und Informationen ist eine der wichtigsten Fähigkeiten in Linux. Es gibt verschiedene Tools für unterschiedliche Suchszenarien.

===== Syntax =====

**Dateien suchen mit find:**
<code>
find /pfad -name "dateiname"           # Datei nach Namen suchen
find . -type f -name "*.txt"           # Alle .txt Dateien im aktuellen Verzeichnis
find /home -user username              # Dateien eines bestimmten Benutzers
find / -size +100M                     # Dateien größer als 100MB
find . -mtime -7                       # Dateien geändert in letzten 7 Tagen
find . -name "*.log" -exec rm {} \;    # Gefundene Dateien löschen
</code>

**Text-Suche mit grep:**
<code>
grep "suchtext" datei.txt              # Text in Datei suchen
grep -r "suchtext" /pfad/              # Rekursiv in Verzeichnis suchen
grep -i "suchtext" datei.txt           # Case-insensitive Suche
grep -n "suchtext" datei.txt           # Mit Zeilennummern
grep -v "suchtext" datei.txt           # Zeilen OHNE Suchtext
grep -E "pattern1|pattern2" datei.txt  # Mehrere Muster (Extended Regex)
</code>

**Schnelle Datei-Suche mit locate:**
<code>
locate dateiname                       # Schnelle Datei-Suche in Index
updatedb                               # Datei-Index aktualisieren
locate -i dateiname                    # Case-insensitive locate
locate "*.conf" | head -10             # Erste 10 .conf Dateien
</code>

**Which und whereis:**
<code>
which python3                          # Pfad zu ausführbarer Datei
whereis python3                        # Binaries, Source und Manual-Pages
type python3                           # Typ des Befehls (alias, function, etc.)
</code>

----

===== Wichtige Optionen =====

**find Optionen:**
  * **-name**: Nach Namen suchen (case-sensitive)
  * **-iname**: Nach Namen suchen (case-insensitive)
  * **-type**: Dateityp (f=file, d=directory, l=link)
  * **-size**: Nach Größe suchen (+/-/exact)
  * **-mtime**: Nach Änderungszeit suchen
  * **-user**: Nach Besitzer suchen
  * **-group**: Nach Gruppe suchen
  * **-perm**: Nach Berechtigungen suchen
  * **-exec**: Befehl auf gefundene Dateien ausführen

**grep Optionen:**
  * **-r/-R**: Rekursiv suchen
  * **-i**: Case-insensitive
  * **-v**: Invertiert (Zeilen ohne Match)
  * **-n**: Zeilennummern anzeigen
  * **-l**: Nur Dateinamen anzeigen
  * **-c**: Anzahl Matches zählen
  * **-A/B/C**: After/Before/Context Zeilen
  * **-E**: Extended Regular Expressions
  * **-F**: Fixed strings (keine Regex)

**Reguläre Ausdrücke:**
  * **^**: Zeilenanfang
  * **$**: Zeilenende
  * **.**: Beliebiges Zeichen
  * **\***: Null oder mehr Wiederholungen
  * **+**: Eine oder mehr Wiederholungen
  * **?**: Null oder eine Wiederholung
  * **[abc]**: Zeichen-Klasse
  * **[a-z]**: Zeichen-Bereich
  * **\|**: Oder-Operator

----

===== Beispiele =====

**Praktische find-Beispiele:**
<code>
# Große Dateien finden (Speicherplatz-Analyse)
find /home -type f -size +100M -exec ls -lh {} \; | sort -k5 -hr

# Alte Log-Dateien finden und löschen
find /var/log -name "*.log" -mtime +30 -delete

# Dateien mit falschen Berechtigungen finden
find /var/www -type f ! -perm 644
find /var/www -type d ! -perm 755

# Leere Dateien und Verzeichnisse finden
find . -type f -empty
find . -type d -empty

# Nach Datei-Extension suchen
find . -name "*.php" -o -name "*.html" -o -name "*.css"

# Dateien eines bestimmten Alters
find . -newermt "2024-01-01" ! -newermt "2024-02-01"
</code>

**Erweiterte grep-Beispiele:**
<code>
# Log-Analyse
grep -i error /var/log/syslog | tail -20
grep "404" /var/log/apache2/access.log | wc -l

# Konfigurationsdateien durchsuchen
grep -r "ServerName" /etc/apache2/
grep -r "listen" /etc/nginx/ --include="*.conf"

# E-Mail-Adressen finden
grep -E "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}" datei.txt

# IP-Adressen finden
grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" logfile.txt

# Kontext anzeigen (Zeilen vor/nach Match)
grep -A 5 -B 5 "ERROR" logfile.txt

# Mehrere Dateien gleichzeitig
grep "TODO" *.py *.js *.html
</code>

**Kombinierte Such-Befehle:**
<code>
# Große Dateien mit bestimmtem Inhalt
find . -type f -size +10M -exec grep -l "search_term" {} \;

# Dateien finden und Inhalt durchsuchen
find /etc -name "*.conf" | xargs grep -l "ssl"

# Dateien nach Datum finden und verarbeiten
find /backups -name "*.tar.gz" -mtime -1 | while read file; do
    echo "Processing $file"
    # weitere Verarbeitung
done

# Top 10 größte Dateien mit Details
find . -type f -exec du -h {} \; | sort -hr | head -10
</code>

**Text-Verarbeitung und Analyse:**
<code>
# Häufigste Wörter in Datei
cat datei.txt | tr ' ' '\n' | sort | uniq -c | sort -nr | head -10

# Zeilen-, Wort- und Zeichen-Zählung
wc -l datei.txt         # Zeilen zählen
wc -w datei.txt         # Wörter zählen
wc -c datei.txt         # Zeichen zählen

# Doppelte Zeilen finden
sort datei.txt | uniq -d

# Unterschiede zwischen Dateien
diff datei1.txt datei2.txt
comm datei1.txt datei2.txt    # Sortierte Dateien vergleichen
</code>

===== Hinweis =====

**Performance-Tipps:**
  * **locate** ist schneller als find für einfache Datei-Suchen
  * **find** Suchbereich so klein wie möglich halten
  * **grep -F** für einfache String-Suche (ohne Regex)
  * **ripgrep (rg)** als moderne, schnelle grep-Alternative
  * **fd** als moderne find-Alternative

**Wichtige Konzepte:**
  * **Reguläre Ausdrücke** für erweiterte Muster-Suche
  * **Pipes** zur Kombination von Such-Befehlen
  * **xargs** zur Verarbeitung von find-Ergebnissen
  * **updatedb** läuft täglich via cron für locate-Index

===== Alternativen =====

**Moderne Such-Tools:**
  * **ripgrep (rg)**: Extrem schnelle Text-Suche
  * **fd**: Moderne find-Alternative
  * **fzf**: Fuzzy Finder für interaktive Suche
  * **ag (the_silver_searcher)**: Schnelle Code-Suche
  * **ack**: Programmierer-orientierte grep-Alternative

**GUI-Tools:**
  * **GNOME Search**: Desktop-integrierte Suche
  * **KFind**: KDE-Datei-Suche
  * **Catfish**: Lightweight GUI-Suchtools

===== Weitere Informationen =====

**Manual Pages:**
<code>
man find
man grep
man locate
man regex
man xargs
</code>

**Online-Ressourcen:**
  * [[https://regex101.com/|Regex Tester]]
  * [[https://www.gnu.org/software/findutils/manual/html_monolith/find.html|GNU Find Manual]]
  * [[https://www.gnu.org/software/grep/manual/grep.html|GNU Grep Manual]]

**Weiterführende Themen:**
  * Advanced Regular Expressions
  * Performance-Optimierung von Suchvorgängen
  * Indexing-Strategien für große Dateisysteme

----

===== Alternativen =====

----

===== Weitere Informationen =====



